{"version":3,"sources":["scripts/main.js"],"names":["toNum","numStr","Number","split","join","slice","heading","document","querySelector","tbody","tr","querySelectorAll","arr","forEach","item","push","shift","pop","oldTarget","clickCount","sortingHandler","e","targetItem","target","closest","contains","sort","a","b","aElement","children","cellIndex","innerText","bElement","localeCompare","reverse","innerHTML","map","oldTargetRow","rowHandler","targetRow","classList","remove","add","form","createElement","prettySalary","salary","strNum","numberArr","String","numberArrCopy","count","i","length","splice","insertAdjacentHTML","body","append","validation","data","get","submitHandler","preventDefault","FormData","div","setAttribute","newTr","newEmpSalary","insertAdjacentElement","setTimeout","doubleClickHandler","targetCell","initialValue","targetInput","addEventListener","ev","key","value"],"mappings":"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","file":"main.6496eb2d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst toNum = (numStr) => {\n  if (numStr[0] !== '$') {\n    return +numStr;\n  }\n\n  return Number(numStr.split(',').join('').slice(1));\n};\n\nconst heading = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst tr = document.querySelectorAll('tr');\nconst arr = [];\n\ntr.forEach(item => arr.push(item));\narr.shift();\narr.pop();\n\nlet oldTarget = null;\nlet clickCount = 0;\n\nconst sortingHandler = e => {\n  const targetItem = e.target.closest('th');\n\n  if (!targetItem || !heading.contains(targetItem)) {\n    return;\n  }\n\n  arr.sort((a, b) => {\n    const aElement = a.children[targetItem.cellIndex].innerText;\n    const bElement = b.children[targetItem.cellIndex].innerText;\n\n    if (targetItem.innerText === 'Salary' || targetItem.innerText === 'Age') {\n      return toNum(aElement) - toNum(bElement);\n    }\n\n    return aElement.localeCompare(bElement);\n  });\n\n  if (targetItem === oldTarget) {\n    clickCount += 1;\n\n    if (clickCount % 2 !== 0) {\n      arr.reverse();\n    }\n  } else {\n    clickCount = 0;\n  };\n\n  tbody.innerHTML = arr.map(item => `\n    <tr>\n      <td>${item.children[0].innerText}</td>\n      <td>${item.children[1].innerText}</td>\n      <td>${item.children[2].innerText}</td>\n      <td>${item.children[3].innerText}</td>\n      <td>${item.children[4].innerText}</td>\n    </tr>\n  `).join('');\n\n  oldTarget = targetItem;\n};\n\nlet oldTargetRow = null;\n\nconst rowHandler = e => {\n  const targetRow = e.target.closest('tr');\n\n  if (oldTargetRow !== null && targetRow.innerText !== oldTargetRow.innerText) {\n    oldTargetRow.classList.remove('active');\n  }\n  targetRow.classList.add('active');\n  oldTargetRow = targetRow;\n};\n\n/* Start script for creating form; */\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nform.insertAdjacentHTML('beforeend', `\n  <label>Name: \n    <input name=\"name\" data-qa=\"name\" type=\"text\" required>\n  </label>\n\n  <label>Position: \n    <input name=\"position\" data-qa=\"position\" type=\"text\" required>\n  </label>\n\n  <label>Office: \n    <select name=\"office\" data-qa=\"office\" required>\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburhg\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n\n  <label>Age: \n    <input name=\"age\" data-qa=\"age\" type=\"number\" required>\n  </label>\n\n  <label>Salary: \n    <input  data-qa=\"salary\" name=\"salary\" type=\"number\" required>\n  </label>\n\n  <button type=\"submit\">Save to table</button>\n`);\ndocument.body.append(form);\n/* End creating form. */\n\n/* Handler for submit + validation */\nfunction prettySalary(salary) {\n  const strNum = String(salary);\n  const numberArr = strNum.split('');\n  const numberArrCopy = [...numberArr];\n  let count = 1;\n\n  for (let i = numberArr.length - 1; i !== 0; i--) {\n    if (count % 3 === 0 && count !== 0) {\n      numberArrCopy.splice(i, 0, ',');\n    }\n\n    count++;\n  }\n\n  return '$' + numberArrCopy.join('');\n}\n\nconst validation = data => {\n  if (data.get('name').length < 4) {\n    return 'Invalid name';\n  }\n\n  if (+data.get('age') < 18 || +data.get('age') > 90) {\n    return 'Invalid age';\n  }\n};\n\nconst submitHandler = e => {\n  e.preventDefault();\n\n  const data = new FormData(form);\n  const div = document.createElement('div');\n\n  div.classList.add('notification');\n  div.setAttribute('data-qa', 'notification');\n\n  if (validation(data) === 'Invalid name') {\n    div.classList.add('error');\n\n    div.innerHTML = `\n      <h2 class = \"title\">Invalid name</h2>\n      <p>You type too short name. Change it.</p>\n    `;\n  } else if (validation(data) === 'Invalid age') {\n    div.classList.add('error');\n\n    div.innerHTML = `\n      <h2 class = \"title\">Invalid age</h2>\n      <p>You type too big or too small age. Fix it.</p>\n    `;\n  } else {\n    div.classList.add('success');\n\n    div.innerHTML = `\n      <h2 class = \"title\">Success</h2>\n      <p>Employee was added to the list.</p>\n    `;\n\n    const newTr = document.createElement('tr');\n    const newEmpSalary = prettySalary(data.get('salary'));\n\n    newTr.innerHTML = `\n      <td>${data.get('name')}</td>\n      <td>${data.get('position')}</td>\n      <td>${data.get('office')}</td>\n      <td>${data.get('age')}</td>\n      <td>${newEmpSalary}</td>\n    `;\n\n    arr.push(newTr);\n    tbody.insertAdjacentElement('beforeend', newTr);\n  }\n\n  document.body.append(div);\n\n  setTimeout(() => {\n    div.remove();\n  }, 2000);\n};\n\n/* End handler */\n\n/* Double click on cell handler */\n\nconst doubleClickHandler = e => {\n  const targetCell = e.target.closest('td');\n  const initialValue = targetCell.innerText;\n\n  targetCell.innerText = '';\n  targetCell.innerHTML = `<input name=\"inputVal\" class=\"cell-input\">`;\n\n  const targetInput = document.querySelector('.cell-input');\n\n  targetCell.addEventListener('keypress', ev => {\n    if (ev.key === 'Enter') {\n      if (targetInput.value) {\n        targetCell.innerText = targetInput.value;\n      } else {\n        targetCell.innerText = initialValue;\n      }\n    }\n  });\n};\n\n/* End handler */\n\nheading.addEventListener('click', sortingHandler);\ntbody.addEventListener('click', rowHandler);\nform.addEventListener('submit', submitHandler);\ntbody.addEventListener('dblclick', doubleClickHandler);\n"]}